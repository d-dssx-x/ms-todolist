import {fetcher} from '../../helpers/fetch.helper'export const ADD_LIST = 'LISTS/ADD_LIST'export const CHANGE_TITLE_LIST = 'LISTS/CHANGE_TITLE_LIST'export const DELETE_LIST = 'LISTS/DELETE_LIST'export const FETCH_LISTS = 'LISTS/FETCH_LISTS'export const ADD_TASK = 'TASKS/ADD_TASK'export const PATCH_TASK = 'TASKS/PATCH_TASK'export const FETCH_TASKS = 'TASKS/FETCH_TASKS'export const SWITCH_TASKS_IN_LIST = 'TASKS/SWITCH_TASKS_IN_LIST'export const DELETE_TASK = 'TASKS/DELETE_TASK'export const MOVE_TASK_TO_LIST = 'TASKS/MOVE_TASK_TO_LIST'export const DELETE_TASKS_BY_LISTID = 'TASKS/DELETE_TASKS_BY_LISTID'export const SELECT_TASK = 'SYSTEM/SELECT_TASK'export const SHOW_CALENDAR = 'SYSTEM/SHOW_CALENDAR'export const HIDE_CALENDAR = 'SYSTEM/HIDE_CALENDAR'export const SHOW_MODAL = 'SYSTEM/SHOW_MODAL'export const HIDE_MODAL = 'SYSTEM/HIDE_MODAL'export const SHOW_LIST_MODAL = 'SYSTEM/SHOW_LIST_MODAL'export const HIDE_LIST_MODAL = 'SYSTEM/HIDE_LIST_MODAL'export const SHOW_DELETE_ALERT = 'SYSTEM/SHOW_DELETE_ALERT'export const HIDE_DELETE_ALERT = 'SYSTEM/HIDE_DELETE_ALERT'export const REGISTRATION = 'SYSTEM/REGISTRATION'export const LOGIN = 'SYSTEM/LOGIN'export const LOGOUT = 'SYSTEM/LOGOUT'export const SET_ALERT = 'SYSTEM/SET_ALERT'export const CLEAR_ALERT = 'SYSTEM/CLEAR_ALERT'export const addTask = (token, values) => {  return async (dispatch) => {    const res = await fetcher('/api/tasks/add', 'POST', values, {      'Authorization': `Bearer ${token}`,    })    const data = await res.json()    if (!res.ok) {      dispatch(setAlert(data))    }    return dispatch({type: ADD_TASK, task: data})  }}export const patchTasks = (token, value) => {  return async (dispatch) => {    const res = await fetcher('/api/tasks/patch', 'PATCH', value, {      'Authorization': `Bearer ${token}`,    })    const data = await res.json()    if (!res.ok) {      dispatch(setAlert(data))    }    return dispatch({type: PATCH_TASK, task: data})  }}export const selectTask = (id) => {  return {    type: SELECT_TASK,    id,  }}export const switchTasksInList = (values) => {  return {    type: SWITCH_TASKS_IN_LIST,    values: {      dragI: values.dragI,      hoverI: values.hoverI,      listId: values.listId,    },  }}export const showCalendarWin = (calendarType) => {  return {    type: SHOW_CALENDAR,    calendarType: calendarType,  }}export const hideCalendar = () => {  return {    type: HIDE_CALENDAR,  }}export const showModal = (values) => {  return {    type: SHOW_MODAL,    values: {      x: values.x,      y: values.y - 100,      id: values.id,    },  }}export const hideModal = () => {  return {    type: HIDE_MODAL,  }}export const moveTaskToList = (values) => {  return {    type: MOVE_TASK_TO_LIST,    values: {      id: values.id,      listId: values.listId,    },  }}export const showListModal = (values) => {  return {    type: SHOW_LIST_MODAL,    values: {      top: values.top || null,      left: values.left || null,      bottom: values.bottom || null,      right: values.right || null,    },  }}export const hideListModal = () => {  return {    type: HIDE_LIST_MODAL,  }}export const showDeleteAlert = (values) => {  return {    type: SHOW_DELETE_ALERT,    values: {      type: values.type,      id: values.id,    },  }}export const hideDeleteAlert = () => {  return {    type: HIDE_DELETE_ALERT,  }}export const setAlert = (alertMsg) => {  return {    type: SET_ALERT,    alertMsg,  }}export const clearAlert = () => {  return {    type: CLEAR_ALERT,  }}export const registration = (values) => {  return async (dispatch) => {    const res = await fetcher('/api/auth/reg', 'POST', values, {})    const data = await res.json()    dispatch(setAlert(data))    return dispatch({type: REGISTRATION})  }}export const login = (values) => {  return async (dispatch) => {    const res = await fetcher('/api/auth/log', 'POST', values, {})    const data = await res.json()    if (!res.ok) {      return dispatch(setAlert(data))    }    return dispatch({type: LOGIN, token: data.token})  }}export const logout = () => {  return {    type: LOGOUT,  }}export const fetchLists = (token) => {  return async (dispatch) => {    const res = await fetcher('/api/lists', 'GET', null, {      'Authorization': `Bearer ${token}`,    })    const data = await res.json()    if (!res.ok) {      return dispatch(setAlert(data))    }    // eslint-disable-next-line max-len    const defaultList = [{title: 'Tasks', id: 'tasks', type: 'main'}, {title: 'Important', id: 'important', type: 'main'}, {title: 'My Day', id: 'myday', type: 'main'}]    return dispatch({type: FETCH_LISTS, lists: [...defaultList, ...data]})  }}export const addNewList = (token, title) => {  return async (dispatch) => {    const res = await fetcher('/api/lists', 'POST', {title}, {      'Authorization': `Bearer ${token}`,    })    const data = await res.json()    if (!res.ok) {      return dispatch(setAlert(data))    }    return dispatch({type: ADD_LIST, list: data})  }}export const changeTitleList = (token, values) => {  return async (dispatch) => {    const res = await fetcher('/api/lists', 'PATCH', values, {      'Authorization': `Bearer ${token}`,    })    const data = await res.json()    if (!res.ok) {      return dispatch(setAlert(data))    }    return dispatch({type: CHANGE_TITLE_LIST, values})  }}export const deleteList = (token, id) => {  return async (dispatch) => {    const res = await fetcher('/api/lists', 'DELETE', {id}, {      'Authorization': `Bearer ${token}`,    })    dispatch(hideDeleteAlert())    const data = await res.json()    // eslint-disable-next-line max-len    const defaultList = [{title: 'Tasks', id: 'tasks', type: 'main'}, {title: 'Important', id: 'important', type: 'main'}, {title: 'My Day', id: 'myday', type: 'main'}]    if (!res.ok) {      return dispatch(setAlert(data))    }    dispatch(fetchTasks(token))    return dispatch({type: DELETE_LIST, lists: [...defaultList, ...data]})  }}export const fetchTasks = (token) => {  return async (dispatch) => {    const res = await fetcher('/api/tasks', 'GET', null, {      'Authorization': `Bearer ${token}`,    })    const data = await res.json()    if (!res.ok) {      return dispatch(setAlert(data))    }    return dispatch({type: FETCH_TASKS, tasks: data})  }}export const deleteTask = (token, id) => {  return async (dispatch) => {    const res = await fetcher('/api/tasks', 'DELETE', {id}, {      'Authorization': `Bearer ${token}`,    })    dispatch(hideDeleteAlert())    dispatch(selectTask(null))    const data = await res.json()    if (!res.ok) {      return dispatch(setAlert(data))    }    return dispatch({type: DELETE_TASK, tasks: data})  }}